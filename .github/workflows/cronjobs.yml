name: Cronjobs

# Add cronjob later
# Use workflow dispatch to manual trigger the job for now
on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: '30 23 * * *' # 11:30 pm
    - cron: '00 00 * * *' # 12:00 pm
  workflow_dispatch:

jobs:
  AUTO-REBASE:
    if: github.event.schedule != '00 00 * * *'
    runs-on: [self-hosted]
    steps:
    # Runs a single command using the runners shell
    - name: Checkout
      uses: actions/checkout@v2.4.0
    - name: AutoRebase
      run: bash -c scripts/ci/auto_rebase.sh
    secrets:
      BOT_GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}

  NGC-TorchTRT-D2:
    if: github.event.schedule != '30 23 * * *'
    uses: ./.github/workflows/reusable.yml
    with:
      name: torch-trt-and-d2-benchmark
      base_image: nvcr.io/nvidia/pytorch:22.01-py3
      device: gpu-t4
      dockerfile: docker/cronjobs/Dockerfile.torch.ngc
      extra_run_args: --gpus all
      exec_command: bash -c "cd pytorch_blade && bash ./benchmark/run_benchmark.sh"
      push_command: source scripts/ci/deploy_docker.sh && push_images
      remote_dev_docker: bladedisc:disc-dev-pt-ngc
    secrets:
      ALIYUN_DOCKER_USERNAME: ${{ secrets.ALIYUN_DOCKER_USERNAME }}
      ALIYUN_DOCKER_PASSWORD: ${{ secrets.ALIYUN_DOCKER_PASSWORD }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  TorchBench:
    uses: ./.github/workflows/reusable.yml
    with:
      name: torch-offcial-benchmark
      base_image: bladedisc/bladedisc:latest-runtime-torch1.12.0-cu113
      device: gpu-a10
      dockerfile: docker/cronjobs/Dockerfile.torch.bench
      extra_run_args: --cap-add=SYS_ADMIN --gpus all
      exec_command: bash ./pytorch_blade/benchmark/TorchBench/test_torch_bench.sh
      push_command: ""
      remote_dev_docker: ""
    secrets:
      ALIYUN_DOCKER_USERNAME: ${{ secrets.ALIYUN_DOCKER_USERNAME }}
      ALIYUN_DOCKER_PASSWORD: ${{ secrets.ALIYUN_DOCKER_PASSWORD }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
