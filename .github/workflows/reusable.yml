name: Job Reusable Workflow

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      base_image:
        required: true
        type: string
      device:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      exec_command:
        required: true
        type: string
      extra_build_args:
        required: false
        type: string
      extra_envs:
        required: false
        type: string
      extra_run_command:
        required: false
        type: string
      push_command:
        required: true
        type: string
      remote_dev_docker:
        required: true
        type: string
    secrets:
      ALIYUN_DOCKER_USERNAME:
        required: false
      ALIYUN_DOCKER_PASSWORD:
        required: false
      DOCKER_USERNAME:
        required: false
      DOCKER_PASSWORD:
        required: false

jobs:
  Job:
    if: github.repository == 'alibaba/BladeDISC'
    # The type of runner that the job will run on
    runs-on: [self-hosted, "${{ inputs.device }}" ]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Checkout
      uses: actions/checkout@v2.4.0
    - name: Build Docker
      run: |
        set -e
        git submodule sync
        git submodule update --depth=1 --init --recursive
        docker build -t disc-dev-${{ inputs.name }} \
          --build-arg BASEIMAGE=${{ inputs.base_image }} \
          ${{ inputs.extra_build_args }} \
          ${{ inputs.extra_envs }} \
          -f ${{ inputs.dockerfile }} .
    - name: Run Job 
      run: |
        set -e
        docker run --rm -t --user $(id -u):$(id -g) \
          {inputs.extra_run_command} \
          -v $HOME/.cache:$HOME/.cache \
          -v /etc/passwd:/etc/passwd:ro \
          -v /etc/group:/etc/group:ro \
          -v $PWD:/disc \
          -e GITHUB_WORKFLOW=$GITHUB_WORKFLOW \
          ${{ inputs.extra_envs }} \
          -w /disc \
          disc-dev-${{ inputs.name }} ${{ inputs.exec_command }}
    - name: Push Docker Image
      env:
        ALIYUN_DOCKER_USERNAME: ${{ secrets.ALIYUN_DOCKER_USERNAME }}
        ALIYUN_DOCKER_PASSWORD: ${{ secrets.ALIYUN_DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        GITHUB_PULL_REQUEST: ${{ github.event.number }}
        REMOTE_DEV_DOCKER: ${{ inputs.remote_dev_docker }}
        LOCAL_DEV_DOCKER: disc-dev-${{ inputs.name }}
      run: |
        set -e
        if [[ ! -z "${{ inputs.push_command }}" ]]; then
          echo "Push docker image"
          ${{ inputs.push_command }}
        fi
