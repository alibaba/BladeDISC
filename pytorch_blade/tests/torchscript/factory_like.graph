// RUN: shape_analysis_tool -f %s | FileCheck %s

// CHECK-LABEL: graph
graph(%p1 : Float(*, *, *)):
  %cst0 : int = prim::Constant[value=0]()
  %cst6 : int = prim::Constant[value=6]()
  %cst32 : int = prim::Constant[value=32]()
  %cst512 : int = prim::Constant[value=512]()
  %cst768 : int = prim::Constant[value=768]()
  %sizes: int[] = prim::ListConstruct(%cst32, %cst512, %cst768)
  %cuda : Device = prim::Constant[value="cuda"]()
  %false: bool = prim::Constant[value=0]()
// CHECK:  Float(*, *, *, device=cuda) = aten::new_zeros
  %new_zeros : Tensor = aten::new_zeros(%p1, %sizes, %cst6, %cst0, %cuda, %false)
  return (%new_zeros)

// prim::device, aten::new_zeros
// CHECK-LABEL: graph
graph(%p1 : Float(*, *, *, device=cuda)):
  %cst0 : int = prim::Constant[value=0]()
  %cst6 : int = prim::Constant[value=6]()
  %cst32 : int = prim::Constant[value=32]()
  %cst512 : int = prim::Constant[value=512]()
  %cst768 : int = prim::Constant[value=768]()
  %sizes: int[] = prim::ListConstruct(%cst32, %cst512, %cst768)
  %cuda : Device = prim::device(%p1)
  %false: bool = prim::Constant[value=0]()
// CHECK:  Float(*, *, *, device=cuda) = aten::new_zeros
  %new_zeros : Tensor = aten::new_zeros(%p1, %sizes, %cst6, %cst0, %cuda, %false)
  return (%new_zeros)

// aten::full
// CHECK-LABEL: graph
graph(%d0 : int,
      %d1 : int,
      %d_or_val : int):
  %5 : None = prim::Constant()
  %device : Device = prim::Constant[value="cuda"]()
  %6 : int[] = prim::ListConstruct(%d0, %d1)
// CHECK: Long(*, *, device=cuda) = aten::full
  %7 : Long(*, *, device=cuda) = aten::full(%6, %d_or_val, %5, %5, %device, %5)
  return (%7)

// aten::full dtype=torch.float32
// CHECK-LABEL: graph
graph(%d0 : int,
      %d1 : int,
      %d_or_val : int):
  %6 : None = prim::Constant() # :0:0
  %5 : int = prim::Constant[value=6]()
  %device : Device = prim::Constant[value="cuda"]()
  %7 : int[] = prim::ListConstruct(%d0, %d1)
// CHECK: Float(*, *, device=cuda) = aten::full
  %8 : Float(*, *, device=cuda) = aten::full(%7, %d_or_val, %5, %6, %device, %6)
  return (%8)
