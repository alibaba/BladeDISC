workspace(name = "org_tao_bridge")

# Initialize the tao_bridge repository and all dependencies.
#
# The cascade of load() statements and workspace?() calls works around the
# restriction that load() statements need to be at the top of .bzl files.
# E.g. we can not retrieve a new repository with http_archive and then load()
# a macro from that repository in the same file.

load("@//:workspace2.bzl", "tao_bridge_workspace2")

tao_bridge_workspace2()

load("@//:workspace1.bzl", "tao_bridge_workspace1")

tao_bridge_workspace1()

load("@org_third_party//bazel:blade_disc_dnn_workspace.bzl", "blade_disc_dnn_workspace")

blade_disc_dnn_workspace()

load("@//:workspace0.bzl", "tao_bridge_workspace0")

tao_bridge_workspace0()

load("@org_third_party//bazel/third_party:blade_service_common_workspace.bzl", "blade_service_common_workspace")

blade_service_common_workspace()

load("@local_config_tf_protobuf//:tf_protobuf_workspace.bzl", "tf_protobuf_workspace")

tf_protobuf_workspace()

# Initialize TensorFlow's external dependencies.
load("@org_tensorflow//tensorflow:workspace3.bzl", "tf_workspace3")

tf_workspace3()

load("@org_tensorflow//tensorflow:workspace2.bzl", "tf_workspace2")

tf_workspace2()

load("@org_tensorflow//tensorflow:workspace1.bzl", "tf_workspace1")

tf_workspace1()

load("@org_tensorflow//tensorflow:workspace0.bzl", "tf_workspace0")

tf_workspace0()
