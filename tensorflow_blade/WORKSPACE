workspace(name = "org_tf_blade")

# Initialize the tf_blade repository and all dependencies.
#
# The cascade of load() statements and workspace?() calls works around the
# restriction that load() statements need to be at the top of .bzl files.
# E.g. we can not retrieve a new repository with http_archive and then load()
# a macro from that repository in the same file.

load("@//:workspace2.bzl", "tf_blade_workspace2")

tf_blade_workspace2()

load("@//:workspace1.bzl", "tf_blade_workspace1")

tf_blade_workspace1()

load("@//:workspace0.bzl", "tf_blade_workspace0")

tf_blade_workspace0()

load("@//:workspace_platform_alibaba.bzl", "workspace_platform_alibaba")
workspace_platform_alibaba()
# blade_service_common_workspace is defined in workspace_platform_alibaba
load("@local_config_blade_service_common//:blade_service_common_workspace.bzl", "blade_service_common_workspace")
blade_service_common_workspace()

load("@local_config_tf_protobuf//:tf_protobuf_workspace.bzl", "tf_protobuf_workspace")

tf_protobuf_workspace()

# Initialize TensorFlow's external dependencies.
load("@org_tensorflow//tensorflow:workspace3.bzl", "tf_workspace3")

tf_workspace3()

load("@org_tensorflow//tensorflow:workspace2.bzl", "tf_workspace2")

tf_workspace2()

load("@org_tensorflow//tensorflow:workspace1.bzl", "tf_workspace1")

tf_workspace1()

load("@org_tensorflow//tensorflow:workspace0.bzl", "tf_workspace0")

tf_workspace0()
